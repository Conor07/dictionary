{"version":3,"sources":["components/Logo.js","utils/fetchDictionaryAPIData.js","components/SearchBar.js","components/CardTitle.js","components/CardItem.js","components/NumberOfMeanings.js","components/CardSubTitle.js","components/CardMeaningItem.js","components/HorizontalLine.js","components/SingleMeaning.js","components/ShowMoreButton.js","components/MultipleMeanings.js","components/Card.js","components/LoadingAndError.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","id","icon","fetchDictionaryAPIData","aPIURL","setData","setDataLoaded","setDataError","a","fetchError","fetch","then","response","ok","json","statusText","catch","error","console","log","data","SearchBar","setShowMore","useState","searchText","setSearchText","handleSearch","api_new_url","type","placeholder","onChange","e","target","value","toLowerCase","onKeyDown","key","onClick","CardTitle","text","CardItem","heading","NumberOfMeanings","numberOfMeanings","CardSubTitle","CardMeaningItem","meaning","item","index","newkey","definition","undefined","example","HorizontalLine","SingleMeaning","titleText","meanings","definitions","ShowMoreButton","handleShowMore","MultipleMeanings","map","partOfSpeech","Card","showMore","setNumberOfMeanings","useEffect","length","word","phonetic","origin","LoadingAndError","dataLoaded","Footer","href","library","add","faBook","faBookOpen","faCode","faGithub","App","dataError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13fde1e0.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Logo = () => {\n  return (\n    <div className=\"logo-container\">\n      <div id=\"logo\">\n        <span className=\"logo-text\">word curiosity </span>\n\n        <FontAwesomeIcon icon=\"book-open\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","const fetchDictionaryAPIData = async (\n  aPIURL,\n  setData,\n  setDataLoaded,\n  setDataError\n) => {\n  let fetchError = false;\n\n  let data = await fetch(aPIURL)\n    .then((response) => {\n      if (response.ok) {\n        fetchError = false;\n        return response.json();\n      } else if (response.statusText === 404) {\n        fetchError = true;\n        return {};\n      } else {\n        fetchError = true;\n        return {};\n      }\n    })\n    .catch((error) => {\n      console.log(`fetchDictionaryData Error: ${error}`);\n    });\n\n  if (!fetchError) {\n    setData(data[0]);\n    setDataError(false);\n    setDataLoaded(true);\n  } else {\n    setDataError(true);\n    setDataLoaded(true);\n  }\n};\n\nexport default fetchDictionaryAPIData;\n","import React, { useState } from \"react\";\nimport fetchDictionaryAPIData from \"../utils/fetchDictionaryAPIData\";\n\nconst API_BASE_URL = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n\nconst SearchBar = ({ setData, setDataLoaded, setDataError, setShowMore }) => {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleInput = (e) => {\n    setSearchText(e.target.value.toLowerCase());\n  };\n\n  const handleSearch = () => {\n    const api_new_url = `${API_BASE_URL}${searchText}`;\n\n    try {\n      setShowMore(false);\n      fetchDictionaryAPIData(api_new_url, setData, setDataLoaded, setDataError);\n    } catch (error) {\n      console.log(`RANDOM ERROR: ${error}`);\n      setDataError(true);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className=\"search-bar-container\">\n      <input\n        className=\"search-bar-input\"\n        type=\"text\"\n        placeholder=\"search for a word definition...\"\n        onChange={handleInput}\n        onKeyDown={handleKeyDown}\n      />\n      <button className=\"search-bar-button\" onClick={handleSearch}>\n        search\n      </button>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst CardTitle = ({ text }) => {\n  return (\n    <div className=\"card-title-container\">\n      <span className=\"card-title-text\">\"{text}\"</span>\n    </div>\n  );\n};\n\nexport default CardTitle;\n","const CardItem = ({ heading, text }) => {\n  return (\n    <div className=\"card-item-container\">\n      <span className=\"card-item-heading\">{heading}:</span>\n\n      <span className=\"card-item-text\">{text}</span>\n    </div>\n  );\n};\n\nexport default CardItem;\n","const NumberOfMeanings = ({ numberOfMeanings }) => {\n  return numberOfMeanings === 1 ? (\n    <div className=\"number-of-meanings\">{\"1 Meaning Found\"}</div>\n  ) : (\n    // <div className=\"number-of-meanings\">{`( ${numberOfMeanings} Meanings Found )`}</div>\n    <div className=\"number-of-meanings\">{\"> 1 Meaning Found\"}</div>\n  );\n};\n\nexport default NumberOfMeanings;\n","const CardSubTitle = ({ text }) => {\n  return (\n    <div className=\"card-subtitle-container\">\n      <span className=\"card-item-subtitle\">{text}</span>\n    </div>\n  );\n};\n\nexport default CardSubTitle;\n","import CardItem from \"./CardItem\";\n\nconst CardMeaningItem = ({ meaning, item, index }) => {\n  const newkey = (index + 2) * 10;\n\n  return (\n    <div key={`definitions${index}`}>\n      <CardItem\n        key={`definiton${newkey + 1}`}\n        heading=\"definition\"\n        text={item.definition}\n      />\n\n      {item.example !== undefined ? (\n        <CardItem\n          key={`definiton${newkey + 2}`}\n          heading=\"example\"\n          text={item.example}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default CardMeaningItem;\n","import React from \"react\";\n\nconst HorizontalLine = () => {\n  return <hr className=\"horizontal-line\" />;\n};\n\nexport default HorizontalLine;\n","import CardSubTitle from \"./CardSubTitle\";\nimport CardMeaningItem from \"./CardMeaningItem\";\nimport HorizontalLine from \"./HorizontalLine\";\n\nconst SingleMeaning = ({ titleText, data }) => {\n  return (\n    <div>\n      <CardSubTitle text={titleText} />\n\n      <HorizontalLine />\n\n      <CardMeaningItem\n        meaning={data.meanings[0]}\n        item={data.meanings[0].definitions[0]}\n        index={0}\n      />\n    </div>\n  );\n};\n\nexport default SingleMeaning;\n","const ShowMoreButton = ({ text, handleShowMore }) => {\n  return (\n    <button className=\"show-more-button\" onClick={handleShowMore}>\n      {text}\n    </button>\n  );\n};\n\nexport default ShowMoreButton;\n","import CardSubTitle from \"./CardSubTitle\";\nimport CardMeaningItem from \"./CardMeaningItem\";\nimport HorizontalLine from \"./HorizontalLine\";\n\nconst MultipleMeanings = ({ data }) => {\n  return data.meanings.map((meaning, index) => {\n    return (\n      <div key={`meanings${index}`}>\n        {/* <CardSubTitle text={`meaning ${index + 1}`} /> */}\n        <CardSubTitle text={`${meaning.partOfSpeech}`} />\n\n        {meaning.definitions.map((item, index) => {\n          return (\n            <div key={`definitions${index}-container`}>\n              <HorizontalLine />\n\n              <CardMeaningItem meaning={meaning} item={item} index={index} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  });\n};\n\nexport default MultipleMeanings;\n","import { useState, useEffect } from \"react\";\nimport CardTitle from \"./CardTitle\";\nimport CardItem from \"./CardItem\";\nimport NumberOfMeanings from \"./NumberOfMeanings\";\nimport SingleMeaning from \"./SingleMeaning\";\nimport ShowMoreButton from \"./ShowMoreButton\";\nimport MultipleMeanings from \"./MultipleMeanings\";\n\nconst Card = ({ data, showMore, setShowMore }) => {\n  const [numberOfMeanings, setNumberOfMeanings] = useState(0);\n\n  useEffect(() => {\n    setNumberOfMeanings(data.meanings.length);\n  }, [data]);\n\n  const handleShowMore = () => {\n    setShowMore(!showMore);\n  };\n\n  return (\n    <div className=\"card-container\">\n      <CardTitle text={data.word} />\n      <NumberOfMeanings numberOfMeanings={numberOfMeanings} />\n      <CardItem heading=\"phonetic\" text={data.phonetic} />\n      <CardItem heading=\"origin\" text={data.origin} />\n      {numberOfMeanings === 1 ? (\n        <div key={\"single-meaning-container1\"}>\n          <SingleMeaning\n            titleText={`${data.meanings[0].partOfSpeech}`}\n            data={data}\n          />\n        </div>\n      ) : !showMore ? (\n        <div key={\"single-meaning-container1\"}>\n          <SingleMeaning\n            titleText={`${data.meanings[0].partOfSpeech}`}\n            data={data}\n          />\n\n          <ShowMoreButton\n            text=\"show more meanings...\"\n            handleShowMore={handleShowMore}\n          />\n        </div>\n      ) : (\n        <div key=\"multiple-meanings-container\">\n          <MultipleMeanings data={data} />\n\n          <ShowMoreButton\n            text=\"show less meanings...\"\n            handleShowMore={handleShowMore}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n","const LoadingAndError = ({ dataLoaded }) => {\n  return (\n    <>\n      {!dataLoaded ? (\n        <div className=\"loading\">loading...</div>\n      ) : (\n        <div className=\"error\">\n          error:\n          <br />\n          please search for another word\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default LoadingAndError;\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Footer = () => {\n  return (\n    <div id=\"footer\">\n      <div className=\"footer-1\">\n        This app uses the API/data from the Dictionary API <span> </span>\n        <FontAwesomeIcon icon=\"code\" /> <span> </span>:\n        <br />\n        <a href=\"https://dictionaryapi.dev\">https://dictionaryapi.dev</a>\n      </div>\n\n      <div className=\"footer-2\">\n        The Dictionary API GitHub <span> </span>\n        <FontAwesomeIcon icon={[\"fab\", \"github\"]} /> <span> </span>:\n        <br />\n        <a href=\"https://github.com/meetDeveloper/freeDictionaryAPI\">\n          https://github.com/meetDeveloper/freeDictionaryAPI\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport Logo from \"./components/Logo\";\nimport SearchBar from \"./components/SearchBar\";\nimport Card from \"./components/Card\";\nimport LoadingAndError from \"./components/LoadingAndError\";\nimport Footer from \"./components/Footer\";\n\nimport fetchDictionaryAPIData from \"./utils/fetchDictionaryAPIData\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faBook, faBookOpen, faCode } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nlibrary.add(faBook, faBookOpen, faCode, faGithub);\n\nconst DEFAULT_API_URL = \"https://api.dictionaryapi.dev/api/v2/entries/en/hello\";\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [dataError, setDataError] = useState(false);\n  const [showMore, setShowMore] = useState(false);\n\n  useEffect(() => {\n    fetchDictionaryAPIData(\n      DEFAULT_API_URL,\n      setData,\n      setDataLoaded,\n      setDataError\n    );\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"page-container\">\n        <header id=\"header\">\n          <Logo />\n        </header>\n        <div className=\"contents\">\n          <SearchBar\n            setData={setData}\n            setDataLoaded={setDataLoaded}\n            dataError={dataError}\n            setDataError={setDataError}\n            setShowMore={setShowMore}\n          />\n\n          {dataLoaded && !dataError ? (\n            <Card data={data} showMore={showMore} setShowMore={setShowMore} />\n          ) : (\n            <LoadingAndError dataLoaded={dataLoaded} />\n          )}\n        </div>\n\n        <footer id=\"footer-container\">\n          <Footer />\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}