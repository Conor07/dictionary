{"version":3,"sources":["components/Logo.js","utils/fetchDictionaryAPIData.js","components/SearchBar.js","components/CardTitle.js","components/CardItem.js","components/NumberOfMeanings.js","components/CardSubTitle.js","components/CardMeaningItem.js","components/HorizontalLine.js","components/SingleMeaning.js","components/ShowMoreButton.js","components/MultipleMeanings.js","components/Card.js","components/Error.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","id","icon","fetchDictionaryAPIData","api_url","setData","setDataLoaded","setDataError","a","fetchError","fetch","then","response","ok","json","statusText","catch","error","console","log","data","SearchBar","useState","searchText","setSearchText","handleSearch","api_new_url","type","placeholder","onChange","e","target","value","toLowerCase","onKeyDown","key","onClick","CardTitle","text","CardItem","heading","NumberOfMeanings","numberOfMeanings","CardSubTitle","CardMeaningItem","meaning","item","index","newkey","definition","example","HorizontalLine","SingleMeaning","titleText","meanings","definitions","ShowMoreButton","handleShowMore","MultipleMeanings","map","partOfSpeech","Card","setNumberOfMeanings","showMore","setShowMore","useEffect","length","word","phonetic","origin","Error","Footer","href","library","add","faBook","faBookOpen","faCode","faGithub","App","dataLoaded","dataError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.065d2bf8.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Logo = () => {\n  return (\n    <div className=\"logo-container\">\n      <div id=\"logo\">\n        <span className=\"logo-text\">word curiosity </span>\n\n        <FontAwesomeIcon icon=\"book-open\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","const fetchDictionaryAPIData = async (\n  api_url,\n  setData,\n  setDataLoaded,\n  setDataError\n) => {\n  let fetchError = false;\n\n  let data = await fetch(api_url)\n    .then((response) => {\n      if (response.ok) {\n        fetchError = false;\n        return response.json();\n      } else if (response.statusText === 404) {\n        fetchError = true;\n        return {};\n      } else {\n        fetchError = true;\n        return {};\n      }\n    })\n    .catch((error) => {\n      console.log(`fetchDictionaryData Error: ${error}`);\n    });\n\n  if (!fetchError) {\n    setData(data[0]);\n    setDataLoaded(true);\n    setDataError(false);\n  } else {\n    setDataLoaded(false);\n    setDataError(true);\n  }\n};\n\nexport default fetchDictionaryAPIData;\n","import React, { useState } from \"react\";\nimport fetchDictionaryAPIData from \"../utils/fetchDictionaryAPIData\";\n\nconst API_BASE_URL = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n\nconst SearchBar = ({ setData, setDataLoaded, setDataError }) => {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleInput = (e) => {\n    setSearchText(e.target.value.toLowerCase());\n  };\n\n  const handleSearch = () => {\n    const api_new_url = `${API_BASE_URL}${searchText}`;\n\n    try {\n      fetchDictionaryAPIData(api_new_url, setData, setDataLoaded, setDataError);\n    } catch (error) {\n      console.log(`RANDOM ERROR: ${error}`);\n      setDataError(true);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className=\"search-bar-container\">\n      <input\n        className=\"search-bar-input\"\n        type=\"text\"\n        placeholder=\"search for a word definition...\"\n        onChange={handleInput}\n        onKeyDown={handleKeyDown}\n      />\n      <button className=\"search-bar-button\" onClick={handleSearch}>\n        search\n      </button>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst CardTitle = ({ text }) => {\n  return (\n    <div className=\"card-title-container\">\n      <span className=\"card-title-text\">\"{text}\"</span>\n    </div>\n  );\n};\n\nexport default CardTitle;\n","const CardItem = ({ heading, text }) => {\n  return (\n    <div className=\"card-item-container\">\n      <span className=\"card-item-heading\">{heading}:</span>\n\n      <span className=\"card-item-text\">{text}</span>\n    </div>\n  );\n};\n\nexport default CardItem;\n","const NumberOfMeanings = ({ numberOfMeanings }) => {\n  return numberOfMeanings === 1 ? (\n    <div className=\"number-of-meanings\">{\"1 Meaning Found\"}</div>\n  ) : (\n    // <div className=\"number-of-meanings\">{`( ${numberOfMeanings} Meanings Found )`}</div>\n    <div className=\"number-of-meanings\">{\"> 1 Meaning Found\"}</div>\n  );\n};\n\nexport default NumberOfMeanings;\n","const CardSubTitle = ({ text }) => {\n  return (\n    <div className=\"card-subtitle-container\">\n      <span className=\"card-item-subtitle\">{text}</span>\n    </div>\n  );\n};\n\nexport default CardSubTitle;\n","import CardItem from \"./CardItem\";\n\nconst CardMeaningItem = ({ meaning, item, index }) => {\n  const newkey = (index + 2) * 10;\n\n  return (\n    <div key={`definitions${index}`}>\n      <CardItem\n        key={`definiton${newkey + 1}`}\n        heading=\"definition\"\n        text={item.definition}\n      />\n\n      {/* <CardItem\n        key={`meaning${index}`}\n        heading=\"part of speech\"\n        text={meaning.partOfSpeech}\n      /> */}\n\n      <CardItem\n        key={`definiton${newkey + 2}`}\n        heading=\"example\"\n        text={item.example}\n      />\n    </div>\n  );\n};\n\nexport default CardMeaningItem;\n","import React from \"react\";\n\nconst HorizontalLine = () => {\n  return <hr className=\"horizontal-line\" />;\n};\n\nexport default HorizontalLine;\n","import CardSubTitle from \"./CardSubTitle\";\nimport CardMeaningItem from \"./CardMeaningItem\";\nimport HorizontalLine from \"./HorizontalLine\";\n\nconst SingleMeaning = ({ titleText, data }) => {\n  return (\n    <div>\n      <CardSubTitle text={titleText} />\n\n      <HorizontalLine />\n\n      <CardMeaningItem\n        meaning={data.meanings[0]}\n        item={data.meanings[0].definitions[0]}\n        index={0}\n      />\n    </div>\n  );\n};\n\nexport default SingleMeaning;\n","const ShowMoreButton = ({ text, handleShowMore }) => {\n  return (\n    <button className=\"show-more-button\" onClick={handleShowMore}>\n      {text}\n    </button>\n  );\n};\n\nexport default ShowMoreButton;\n","import CardSubTitle from \"./CardSubTitle\";\nimport CardMeaningItem from \"./CardMeaningItem\";\nimport HorizontalLine from \"./HorizontalLine\";\n\nconst MultipleMeanings = ({ data }) => {\n  return data.meanings.map((meaning, index) => {\n    return (\n      <div key={`meanings${index}`}>\n        {/* <CardSubTitle text={`meaning ${index + 1}`} /> */}\n        <CardSubTitle text={`${meaning.partOfSpeech}`} />\n\n        {meaning.definitions.map((item, index) => {\n          return (\n            <div key={`definitions${index}-container`}>\n              <HorizontalLine />\n\n              <CardMeaningItem meaning={meaning} item={item} index={index} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  });\n};\n\nexport default MultipleMeanings;\n","import { useState, useEffect } from \"react\";\nimport CardTitle from \"./CardTitle\";\nimport CardItem from \"./CardItem\";\nimport NumberOfMeanings from \"./NumberOfMeanings\";\nimport SingleMeaning from \"./SingleMeaning\";\nimport ShowMoreButton from \"./ShowMoreButton\";\nimport MultipleMeanings from \"./MultipleMeanings\";\n\nconst Card = ({ data }) => {\n  const [numberOfMeanings, setNumberOfMeanings] = useState(0);\n  const [showMore, setShowMore] = useState(false);\n\n  useEffect(() => {\n    setNumberOfMeanings(data.meanings.length);\n  }, [data]);\n\n  const handleShowMore = () => {\n    setShowMore(!showMore);\n  };\n\n  return (\n    <div className=\"card-container\">\n      <CardTitle text={data.word} />\n      <NumberOfMeanings numberOfMeanings={numberOfMeanings} />\n      <CardItem heading=\"phonetic\" text={data.phonetic} />\n      <CardItem heading=\"origin\" text={data.origin} />\n      {numberOfMeanings === 1 ? (\n        <div key={\"single-meaning-container1\"}>\n          {/* <SingleMeaning titleText=\"meaning\" data={data} /> */}\n          <SingleMeaning\n            titleText={`${data.meanings[0].partOfSpeech}`}\n            data={data}\n          />\n        </div>\n      ) : !showMore ? (\n        <div key={\"single-meaning-container1\"}>\n          {/* <SingleMeaning titleText=\"meaning 1\" data={data} /> */}\n          <SingleMeaning\n            titleText={`${data.meanings[0].partOfSpeech}`}\n            data={data}\n          />\n\n          <ShowMoreButton\n            text=\"show more meanings...\"\n            handleShowMore={handleShowMore}\n          />\n        </div>\n      ) : (\n        <div key=\"multiple-meanings-container\">\n          <MultipleMeanings data={data} />\n\n          <ShowMoreButton\n            text=\"show less meanings...\"\n            handleShowMore={handleShowMore}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n","const Error = () => {\n  return (\n    <div className=\"error\">\n      error:\n      <br />\n      please search for another word\n    </div>\n  );\n};\n\nexport default Error;\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Footer = () => {\n  return (\n    <div id=\"footer\">\n      <div className=\"footer-1\">\n        This app uses the data from the Dictionary API <span> </span>\n        <FontAwesomeIcon icon=\"code\" /> <span> </span>:\n        <br />\n        <a href=\"https://dictionaryapi.dev\">https://dictionaryapi.dev</a>\n      </div>\n\n      <div className=\"footer-2\">\n        The Dictionary API GitHub <span> </span>\n        <FontAwesomeIcon icon={[\"fab\", \"github\"]} /> <span> </span>:\n        <br />\n        <a href=\"https://github.com/meetDeveloper/freeDictionaryAPI\">\n          https://github.com/meetDeveloper/freeDictionaryAPI\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport Logo from \"./components/Logo\";\nimport SearchBar from \"./components/SearchBar\";\nimport Card from \"./components/Card\";\nimport Error from \"./components/Error\";\nimport Footer from \"./components/Footer\";\n\nimport fetchDictionaryAPIData from \"./utils/fetchDictionaryAPIData\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faBook, faBookOpen, faCode } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nlibrary.add(faBook, faBookOpen, faCode, faGithub);\n\nconst default_api_url = \"dictionary_api_default_word.json\";\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [dataError, setDataError] = useState(false);\n\n  useEffect(() => {\n    fetchDictionaryAPIData(\n      default_api_url,\n      setData,\n      setDataLoaded,\n      setDataError\n    );\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"page-container\">\n        <header id=\"header\">\n          <Logo />\n        </header>\n        <div className=\"contents\">\n          <SearchBar\n            setData={setData}\n            setDataLoaded={setDataLoaded}\n            dataError={dataError}\n            setDataError={setDataError}\n          />\n\n          {dataLoaded && !dataError ? <Card data={data} /> : <Error />}\n        </div>\n\n        <footer id=\"footer-container\">\n          <Footer />\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}